name: CI

on:
  push:
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Build without default features
        run: cargo check --no-default-features

      - name: Build with all features
        run: cargo check --all-features

      - name: Build with only postgres
        run: cargo check --no-default-features --features postgres

      - name: Build with only mysql
        run: cargo check --no-default-features --features mysql

      - name: Build with only oracle
        run: cargo check --no-default-features --features oracle

      - name: Build with only sqlite
        run: cargo check --no-default-features --features sqlite

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install oracle instant client
        run: |
          sudo apt-get update
          sudo apt-get install -y libaio-dev
          sudo ln -s /usr/lib/x86_64-linux-gnu/libaio.so.1t64 /usr/lib/x86_64-linux-gnu/libaio.so.1
          mkdir -p /opt/oracle
          cd /opt/oracle
          wget https://download.oracle.com/otn_software/linux/instantclient/2370000/instantclient-basic-linux.x64-23.7.0.25.01.zip
          unzip instantclient-basic-linux.x64-23.7.0.25.01.zip
          echo "LD_LIBRARY_PATH=/opt/oracle/instantclient_23_7" >> $GITHUB_ENV

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings